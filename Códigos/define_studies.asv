%Para fazer as análises para uma variável p de uma iteração k do algoritmo
%de otimização, define-se o estudo 1 como um estudo auxiliar que define a
%variável p. O estudo 2 e 3 definem a variável p1 como p (do estudo 1,
%porém seu valor foi alterado externamente pelos algoritmos toy). O estudo
%2 não calcular gradientes e o 3 sim.


%Estudo 1: Estudo auxiliar, não realiza cálculos e sim apenas definições. -
%Tomar cuidado ao realizar alterações.
model.study.create('std1');
model.study('std1').create('stat', 'Stationary');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature.remove('fcDef');

model.study('std1').feature('stat').set('usesol', true);
model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label('Compile Equations: Stationary');
model.sol('sol1').feature('v1').label('Dependent Variables 1.1');
model.sol('sol1').feature('s1').active(false);


%Estudo 2: Estudo sem cálculo sensitivo.
model.study.create('std2');
model.study('std2').create('stat', 'Stationary');



model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').attach('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature.remove('fcDef');


model.sol('sol2').attach('std2');
model.sol('sol2').feature('st1').label('Compile Equations: Stationary');
model.sol('sol2').feature('v1').label('Dependent Variables 1.1');
model.sol('sol2').feature('v1').set('initsol', 'sol1');
model.sol('sol2').feature('v1').set('solnum', 'auto');
model.sol('sol2').feature('v1').set('notsolmethod', 'sol');
model.sol('sol2').feature('v1').set('notsol', 'sol1');
model.sol('sol2').feature('v1').set('notsolnum', 'auto');
model.sol('sol2').feature('s1').label('Stationary Solver 1.1');
model.sol('sol2').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol2').feature('s1').feature('dDef').set('thresh', 0.1);
model.sol('sol2').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol2').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 150);
%model.sol('sol2').runAll; 

%Estudo 3: Estudo com cálculo sensitivo.
model.study.create('std3');
model.study('std3').create('sens', 'Sensitivity');
model.study('std3').create('stat', 'Stationary');


if n_vars_densidade>1
    model.study('std1').feature('stat').set('activate', {'mfnc' 'off' 'sens' 'on' 'sens2' 'off' 'hzeq' 'off' 'hzeq2' 'off'});
    model.study('std2').feature('stat').set('activate', {'mfnc' 'on' 'sens' 'off' 'sens2' 'on' 'hzeq' 'on' 'hzeq2' 'on'});
    model.study('std3').feature('stat').set('activate', {'mfnc' 'on' 'sens' 'off' 'sens2' 'on' 'hzeq' 'on' 'hzeq2' 'on'});
else 
    model.study('std1').feature('stat').set('activate', {'mfnc' 'off' 'sens' 'on' 'sens2' 'off' 'hzeq' 'off'});
    model.study('std2').feature('stat').set('activate', {'mfnc' 'on' 'sens' 'off' 'sens2' 'on' 'hzeq' 'on'});
    model.study('std3').feature('stat').set('activate', {'mfnc' 'on' 'sens' 'off' 'sens2' 'on' 'hzeq' 'on'});
end


model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').attach('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').create('sn1', 'Sensitivity');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.study('std3').feature('sens').set('gradientStep', 'stat');

%As próximas linhas habilitam/desabilitam as funções das quais se obtém o
%gradiente. 
%Para cada função da qual se retira os gradientes, habilitar com 'on' aqui. Na dúvida, analisar a ordem das funções no próprio COMSOL.
% Nas funções dentro do algoritmo de otimizaçao (toy2) é realizada a troca
% destas funções para que se obtenha o gradiente de cada função
% individualmente
cell_obj_func_size = 1+n_constraints;
cell_obj_func = cell(1,cell_obj_func_size);

for i=1:cell_obj_func_size-1
    cell_obj_func{i} = 'off';
end
cell_obj_func{cell_obj_func_size} = 'on'; %Por default, ficará habilitado para a retirada de gradiente da função objetivo
model.study('std3').feature('sens').set('objectiveActive', cell_obj_func); 

%habilita o gradiente apenas para as variáveis que interessam. No caso,
%desabilitar as variaveis respectivas à física auxiliar sens1
cell_control_vars_size = 2*(n_blocks+n_vars_global>0) + 2*(n_vars_densidade);
cell_control_vars = cell(1,cell_control_vars_size);
if n_blocks+n_vars_global>0
    
else
end
model.study('std3').feature('sens').set('controlVariableActive', cell_control_vars); %Calcula os gradientes apenas em relação à variável p do sens2

model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std2');
model.study('std3').feature('stat').set('solnum', 'auto');
model.study('std3').feature('stat').set('usesol', true);
model.study('std3').feature('stat').set('notsolmethod', 'sol');
model.study('std3').feature('stat').set('notstudy', 'std2');
model.study('std3').feature('stat').set('notsolnum', 'auto');

model.sol('sol3').attach('std3');
model.sol('sol3').feature('st1').label('Compile Equations: Stationary');
model.sol('sol3').feature('v1').label('Dependent Variables 1.1');
model.sol('sol3').feature('v1').set('initmethod', 'sol');
model.sol('sol3').feature('v1').set('initsol', 'sol2');
model.sol('sol3').feature('v1').set('solnum', 'auto');
model.sol('sol3').feature('v1').set('notsolmethod', 'sol');
model.sol('sol3').feature('v1').set('notsol', 'sol2'); %Para poupar tempo eventualmente, o estudo 3 toma como valores iniciais os resultados do estudo 2
model.sol('sol3').feature('v1').set('notsolnum', 'auto');
model.sol('sol3').feature('s1').label('Stationary Solver 1.1');
model.sol('sol3').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol3').feature('s1').feature('dDef').set('thresh', 0.1);
model.sol('sol3').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol3').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol3').feature('s1').feature('fc1').set('maxiter', 150);
model.sol('sol3').feature('s1').feature('sn1').set('sensfunc', 'all_obj_contrib');
